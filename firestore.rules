rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Profiles collection rules
    match /profiles/{profileId} {
      // Allow read access to all profiles
      allow read: if true;
      
      // Allow create/update with more flexible validation
      allow create, update: if 
        // Check if user is authenticated (even anonymously)
        request.auth != null &&
        
        // Basic structure validation
        request.resource.data is map &&
        
        // Required fields with more flexible validation
        request.resource.data.name is string &&
        request.resource.data.name.size() >= 1 &&
        request.resource.data.name.size() <= 20 &&
        
        // Optional fields with type checking
        (!('lastSaved' in request.resource.data) || request.resource.data.lastSaved is string) &&
        (!('score' in request.resource.data) || request.resource.data.score is number) &&
        (!('currentQuestion' in request.resource.data) || request.resource.data.currentQuestion is number) &&
        (!('version' in request.resource.data) || request.resource.data.version is number) &&
        
        // Optional nested objects
        (!('blockCounts' in request.resource.data) || (
          request.resource.data.blockCounts is map &&
          (!('dirt' in request.resource.data.blockCounts) || request.resource.data.blockCounts.dirt is number) &&
          (!('stone' in request.resource.data.blockCounts) || request.resource.data.blockCounts.stone is number) &&
          (!('wood' in request.resource.data.blockCounts) || request.resource.data.blockCounts.wood is number) &&
          (!('glass' in request.resource.data.blockCounts) || request.resource.data.blockCounts.glass is number)
        )) &&
        
        (!('characterPosition' in request.resource.data) || (
          request.resource.data.characterPosition is map &&
          (!('x' in request.resource.data.characterPosition) || request.resource.data.characterPosition.x is number) &&
          (!('y' in request.resource.data.characterPosition) || request.resource.data.characterPosition.y is number)
        )) &&
        
        // Optional arrays and maps
        (!('blocks' in request.resource.data) || request.resource.data.blocks is list) &&
        (!('questionStats' in request.resource.data) || request.resource.data.questionStats is map);
      
      // Allow delete if the profile exists and user is authenticated
      allow delete: if request.auth != null && exists(/databases/$(database)/documents/profiles/$(profileId));
    }
  }
} 